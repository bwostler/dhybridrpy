! ------------------------------------------------------------------------------
!                                                                             
!   dHybrid input file v 2.2 (first parallel version)  			   
!                                                                             
! 	Run PShock, Started on 2009.10.05	                                   
! 																	
!
! 	Running a parallel 2D shock 			                   
!                                                                             
!   NOTES : - in functions to be parsed, the spacial variables are defined as  
! 			  "x", "y" and "z". A number of constants up to 16 can be defined  
! 			  as ct(1), ct(2), ... If the constants name varies from "ct(..)", 
! 			  it will be expressly indicated. Max nchars for a fparser = 1024                                
!
! ------------------------------------------------------------------------------


!---------- node configuration -------------------------------------------------
node_conf
{
	node_number(1:2)=14,14,			  ! num of processes in each dimension
}

!---------- time ---------------------------------------------------------------
time
{
	dt=.0025,     ! time step
	c=100,        ! speed of light
	niter=100000,  ! number of iterations 100000

	t0=0.,		! initial time
	stiter=0,   ! starting iteration number	
}

!---------- grid and space -----------------------------------------------------
grid_space
{
	ncells(1:2)=4000,200,	! Grid size in number of cells in each dimension
	
	boxsize(1:2)=2000.,100.,	! Simulation box size in normalized units

	bdtype="per","per","per","per", !xl, xr, yl, yr, zl, zr
	Te=1.,
	gamma=1.6667,
}

!---------- output -------------------------------------------------------------
global_output
{
	dodump=.true.,				! if true -> do dump
	ndump=1000,					! num of iter between dumps
	
	B0=3.05191d-7,			! B field normalization (T)
	n0=1.d6,			! density normalization (m-3)

	units="NORM",				! "NORM" (normalized) or "IS" (int. sys.) 
}

!---------- restart ------------------------------------------------------------
restart 
{
	do_restart=.false.,				  ! restarting previous simulation?
	save_restart=.true.,			  ! save restart info on disk?
	restart_step=10000,				  ! num of iter between restart info dumps	
!	restart_time=85000,				  ! time in seconds between restarts (uses restart_time_step)
!	restart_time_step=100,			  ! n of iter at which to check time (global sync)
}

!----------external electromagnetic field---------------------------------------
ext_emf
{
	Bx="0.",
	By="1.",
	Bz="0.",
	Ex="0.",
	Ey="0.",
	Ez="0.",

	n_constants=0,

!	ct(1)=15.,  ! background magnetic field
	
!	Jext(1:3)=0.,0.,0.,	! External J (constant values only, if not present -> 0)
!	NoiseLevel(1:3)=0.1,0.,0., ! random noise to be added to magnetic field components
}

!--------------------external force field---------------------------------------
! way to put gravity in the code
! types supported: GRAV, MASS, or GRAVMASS (based on actual mass density profile, or both)
!ext_force
!{
!        ftype="GRAV",
!        center(1:3)=64.,64.,64.,
!        rmin=5.,
!        K=180.,
!		 subcycling_step=500, ! recalculate every ... timesteps (default no recalculation)
!}

!----------diagnostic for electromagnetic fields and current--------------------
! (1:4) = self_int, self_vect, total_int, total_vect
field_diag
{
	dmp_efld(1:4)= .false., .false., .true., .true.,
	dmp_bfld(1:4)= .false., .false., .true., .true.,
	dmp_jfld(1:2)= .true., .true.,
}

!-------------------------------algorithm control-------------------------------
algorithm
{
	ifsmooth=.true.,	! smooth fields? default = true

	ifsmoothextfields=.true., ! smooth external fields? default = true
	ifsmooth=.true.,
	filternpass=8,	
	compensate=.true.,  ! use compensator in filter? default = true
	subniter=8,
	allowederror=1., ! allowederror=1.d-5 by default (for subniter field calculation)
}

!----------------------------Load Balancing control-----------------------------
loadbalance
{
	loadbalance=.false.,  		  ! do any load balance? default= true
	ifdynamicloadbalance=.false., ! do dynamic load balance? default = true
	dynamicloadbalancestep=500,
}

!----------number of ion species------------------------------------------------
! note: electrons are a neutralizing fluid in dHybrid
! 		so no initialization is necessary
!
particles 
{  
	num_species = 2,    ! number of species

	part_sort_step=25,	! number of steps between sorting

	!XNMIN=0.,  ! if this variable is not defined, no min density will be added to the grid
}

!----------information for species 1--------------------------------------------
species
{

	name="H+_bkg",
	dist="THERMAL",					! type of vel. distribution (THERMAL or ISO)

	num_par(1:2)=2,2,  			! Number of particles per cell
	spare_size=.1,		 			! % (0 to 1) of unused space in part vector
	
	ir=1,							! ionization ratio
	rqm=1.,							! charge to mass ratio (inverse)

	vdrift(1:3)=0.,0.,0., 			! drift velocity
	vth=1.,		 		  			! Thermal velocity

	kin_push=.true.,				! true -> kinetic push, false -> MHD

	ion_t=8.0,						! Ionization time

    ! Species velocity (if defined, ignore vdrift)
        
    ! vsp(1:3)="","","",	

	! velocity autoconsistent with gravity (Fc=Fg) (if defined ignore all others except vth)

	! match_velocity_to_gravity=.false. ! if true, override previous velocity
	! vnorm(1:3)=1.,1.,1.,				! velocity direction  = vnorm x radius
	
	! Species number density

	nsp=1.,		

	! density domain - if blank then all the box
	
!	nsp_domain="if(sqrt((x-ct(5))^2+(y-ct(6))^2+(z-ct(7))^2)<ct(8),1.,0.)",				

!	domain_boundary=0.,0.,0.,384.,384.,384., ! if not specified then all the box

	n_constants=0,					! number of constants in density def.

!	ct(1:4)=100.,192.,192.,192., 	! max. dens., x0, y0, z0
!	ct(5:8)=192., 192., 192., 4.,	! sphere x0, y0, z0 and radius
	
	follow=.false.,					! follow particles? default=false
	
}

!----------boundary conditions for species 1------------------------------------
! (if not specified, assume periodic)

boundary_conditions
{
	! bdtype - per, therm, reflect, open (for each wall)

	bdtype="per","per","per","per", !xl, xr, yl, yr, zl, zr
	
	vth=0.,		! for thermal bath - ignored for others
	
}

!----------Plasma injector for species 1----------------------------------------
! (up to 10 injectors supported. if not specified, assume none)
! plasma injector uses density distribution info from species
!plasma_injector
!{
!	
!	sttime=0.,			  ! start time of injection (def. 0.)
!	endtime=10.,		  ! end time of injection (default max sim time)
!	plane="yz",			  ! plane to inject particles from (xy, yz or xz)
!	planepos=2.,		  ! position of the injector plane
!	boundary=0.,5., ! boundary of the injection plane st, st, end, end
!
!	num_par(1:2)=2,2,	  ! number of particles per cell to inject
!
!	vdrift(1:3)=0.01.,0.,0., ! drift velocity (must be /= 0)
!	vth=1.,				  ! if not specified then = spec vth
!	inj_dens=1.0, 		  ! density, if not specified use species info
!	nodrift=.false.,	  ! zero drift velocity after injecting particles? default=false
!	
!}
!
!----------diagnostic for species 1---------------------------------------------
diag_species 
{
	dmp_vfld(1:2)= .true., .true.,

	! phase spaces - defined by name, if not present then none

	phasespaces="x3x2x1","p1x1","Etx1","p2x1","p3x1","ptx1"
	pres(1:3)=512,512,512,		! resolution for p space (defaults to 512)
	xres(1:2)=100,50,
}

!----------raw diagnostic for species 1-----------------------------------------
raw_diag 
{
	raw_dump=.false.,				! this turns on or off raw dumps

	raw_ndump=100000,				! number of iterations between raw dumps

!	raw_volume(1:6)=10,112,112,20,272,272,	! if not defined, then all all the box
!											! defined -> st point, end point
	raw_dump_fraction=0.01,
	
	v_min=80.,
	
	! selective raw dump, if defined follow particles with these indexes
	
!   n_particles=*		! maximum is 50

!	raw_index(1:*)=,				

}

!----------track diagnostic for species 1-----------------------------------------
track_diag 
{
	track_dump=.false.,			! this turns on or off track dumps (if on, follow=true)
	
	track_fields=.true., 		! if these are on, track fields in particle positions

	track_ndump=100000,			! number of iterations between track dumps
	
	track_nstore=5,				! values are stored every iteration if =1, every other iter if =2, etc

	track_info_file="./input/H+.tags" ! track information (particle tags to track)
	
}


!----------information for species 2--------------------------------------------
species
{

	name="H+_CR",
	dist="ISO",					! type of vel. distribution (THERMAL or ISO)

	num_par(1:2)=2,2,  			! Number of particles per cell
	spare_size=.1,		 			! % (0 to 1) of unused space in part vector
	
	ir=1,							! ionization ratio
	rqm=1.,							! charge to mass ratio (inverse)
	vdrift(1:3)=50.,0.,0., 			! drift velocity
	vth=100.0,		 		  			! Thermal velocity

	kin_push=.true.,				! true -> kinetic push, false -> MHD

	ion_t=8.0,						! Ionization time

    ! Species velocity (if defined, ignore vdrift)
        
    ! vsp(1:3)="","","",	

	! velocity autoconsistent with gravity (Fc=Fg) (if defined ignore all others except vth)

	! match_velocity_to_gravity=.false. ! if true, override previous velocity
	! vnorm(1:3)=1.,1.,1.,				! velocity direction  = vnorm x radius
	
	! Species number density

	nsp=0.01,		

	! density domain - if blank then all the box
	
	! nsp_domain="if( sqrt( (x-ct(5))^2+(y-ct(6))^2+(z-ct(7))^2 )<ct(8) ,1.,0.)",
	nsp_domain="if(x<ct(1),1.,0.)",

!	domain_boundary=0.,0.,0.,384.,384.,384., ! if not specified then all the box

	n_constants=1,					! number of constants in density def.

	ct(1)=1.
!	ct(1:4)=100.,192.,192.,192., 	! max. dens., x0, y0, z0
!	ct(5:8)=192., 192., 192., 4.,	! sphere x0, y0, z0 and radius
	
	follow=.true.,					! follow particles? default=false
	
}

!----------boundary conditions for species 2------------------------------------
! (if not specified, assume periodic)

boundary_conditions
{
	! bdtype - per, therm, reflect, open (for each wall)

	bdtype="open","open","per","per", !xl, xr, yl, yr, zl, zr
	
	vth=0.,		! for thermal bath - ignored for others
	
}

! Uncomment / comment this for driven / undriven mode
!----------Plasma injector for species 2----------------------------------------
! (up to 10 injectors supported. if not specified, assume none)
! plasma injector uses density distribution info from species
plasma_injector
{
	
	sttime=0.,			  ! start time of injection (def. 0.)
	! endtime=125.,		  ! end time of injection (default max sim time)
	plane="yz",			  ! plane to inject particles from (xy, yz or xz)
	planepos=0.,		  ! position of the injector plane
	boundary=0.,100.,0.,100.           ! boundary of the injection plane st, END, st, END

	num_par(1:2)=2,2,	  ! number of particles per cell to inject

	vdrift(1:3)=50.,0.,0., ! drift velocity (must be /= 0)
	vth=100.0,				  ! if not specified then = spec vth
	inj_dens=0.01, 		  ! density, if not specified use species info
	nodrift=.true.,	  ! zero drift velocity after injecting particles? default=false
	
}

!----------diagnostic for species 2---------------------------------------------
diag_species 
{
	dmp_vfld(1:2)= .true., .true.,

	! phase spaces - defined by name, if not present then none

	phasespaces="x3x2x1","p1x1","Etx1","p2x1","p3x1","ptx1"
	pres(1:3)=512,512,512,		! resolution for p space (defaults to 512)
	xres(1:2)=100,100,
}

!----------raw diagnostic for species 2-----------------------------------------
raw_diag 
{
	raw_dump=.true.,				! this turns on or off raw dumps

	raw_ndump=100000,				! number of iterations between raw dumps

!	raw_volume(1:6)=10,112,112,20,272,272,	! if not defined, then all all the box
!											! defined -> st point, end point
	raw_dump_fraction=0.01,
	
	v_min=80.,
	
	! selective raw dump, if defined follow particles with these indexes
	
!   n_particles=*		! maximum is 50

!	raw_index(1:*)=,				

}

!----------track diagnostic for species 2-----------------------------------------
track_diag 
{
	track_dump=.false.,			! this turns on or off track dumps (if on, follow=true)
	
	track_fields=.true., 		! if these are on, track fields in particle positions

	track_ndump=100000,			! number of iterations between track dumps
	
	track_nstore=5,				! values are stored every iteration if =1, every other iter if =2, etc

	track_info_file="./input/H+.tags" ! track information (particle tags to track)
	
}


!----------diagnostic for all species-------------------------------------------
diag_species_total 
{
	dmp_vfld(1:2)= .true., .true.,

	! phase spaces - defined by name, if not present then none

!	phasespaces="x3x2x1","x2x1","x3x1","x3x2","p2p1","p3p1","p3p2",
!				"p1x1","p2x2","p3x3","p2x1","p3x1","p1x2","p3x2","p1x3","p2x3",
!				"ptx1","ptx2","ptx3" 

	pres(1:3)=512,512,512		! resolution for p space (defaults to 512)

}
